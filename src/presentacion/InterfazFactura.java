/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import drogueria.persistencia.Cliente;
import drogueria.persistencia.ClienteDAO;
import drogueria.persistencia.ConsultaMed;
import drogueria.persistencia.ConsultaMedDAO;
import drogueria.persistencia.LaboratorioDescMed;
import drogueria.persistencia.LaboratorioDescMedVenta;
import drogueria.persistencia.LaboratorioDescMedVentaDAO;
import drogueria.persistencia.Usuario;
import drogueria.utilidades.Formateador;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modulofactura.DescripcionLaboratorio;
import modulofactura.FacturaServiceImp;
import modulofactura.GeneralesServiciosMedicamentos;
import modulofactura.IFacturaService;
import modulofactura.ItemVenta;

/**
 *
 * @author hernan
 */
public class InterfazFactura extends javax.swing.JFrame {

    ControladorFactura contolFactura = new ControladorFactura();
    ItemVenta itemVentaActivo;
    IFacturaService servidor;
    String[] clavesElementos;
    boolean esValidaVenta=false;
    /**
     * Creates new form Buscador
     */
    DefaultListModel listModel;

    public InterfazFactura() {
        try {
            servidor = new FacturaServiceImp();
            
        } catch (Exception error) {
            error.printStackTrace();
        }

        initComponents();
        campoDescripcionCantidad.setEditable(false);
        labelPrecioDesc.setText("");
        labelDescripcionDesc.setText("");
        Usuario usuario = servidor.getUsuario();
        Cliente cliente = servidor.getCliente();

        labelNombreCajero.setText(usuario.getLogin());

        labelNombreCliente.setText(cliente.getNombreCliente());
        campoUsuarioCedula.setText(String.valueOf(cliente.getCedula()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        campoBusqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        labelNombreComercial = new javax.swing.JLabel();
        labelDescripcionLab = new javax.swing.JLabel();
        labelDescripcionPrecio = new javax.swing.JLabel();
        labelStock = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaItemsVenta = new javax.swing.JTable();
        labelCantidad = new javax.swing.JLabel();
        labelPrecioDesc = new javax.swing.JLabel();
        labelDescripcionDesc = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        botonCancelarVenta = new javax.swing.JButton();
        labelNombreCliente = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        campoUsuarioCedula = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        labelSubtotal = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        labelIva = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        campoPago = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        labelCambio = new javax.swing.JLabel();
        botonNuevoCliente = new javax.swing.JButton();
        botonVenta = new javax.swing.JButton();
        botonBuscarCliente = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        labelNombreCajero = new javax.swing.JLabel();
        botonBuscarMed = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaVarioSalud = new javax.swing.JTable();
        botonAgregarOtrosMed = new javax.swing.JButton();
        botonAgregarServicioSalud = new javax.swing.JButton();
        botonEliminarVarios = new javax.swing.JButton();
        campoDescripcionStock = new javax.swing.JTextField();
        campoDescripcionLab = new javax.swing.JTextField();
        campoDescripcionPrecio = new javax.swing.JTextField();
        campoDescripcionNombreComercial = new javax.swing.JTextField();
        campoDescripcionCantidad = new javax.swing.JTextField();
        botonAgregarItem = new javax.swing.JButton();
        botonEliminarItemVenta = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        campoBusqueda.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                campoBusquedaCaretUpdate(evt);
            }
        });
        campoBusqueda.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                campoBusquedaInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        campoBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoBusquedaActionPerformed(evt);
            }
        });

        jLabel1.setText("Consulta");

        labelNombreComercial.setText("Nombre comercial");

        labelDescripcionLab.setText("Laboratorio");

        labelDescripcionPrecio.setText("precio");

        labelStock.setText("stock");

        tablaItemsVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "codigo", "Descripcion", "Cantidad", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaItemsVenta);

        labelCantidad.setText("cantidad");

        labelPrecioDesc.setText("Precio Desc");

        labelDescripcionDesc.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        labelDescripcionDesc.setText("sin descuento");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        botonCancelarVenta.setBackground(new java.awt.Color(158, 47, 47));
        botonCancelarVenta.setText("Cancelar Venta");
        botonCancelarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarVentaActionPerformed(evt);
            }
        });

        labelNombreCliente.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        labelNombreCliente.setText("Cliente General");

        jLabel10.setText("CC");

        campoUsuarioCedula.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                campoUsuarioCedulaCaretUpdate(evt);
            }
        });
        campoUsuarioCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoUsuarioCedulaActionPerformed(evt);
            }
        });

        jLabel11.setText("Subtotal");

        labelSubtotal.setBackground(new java.awt.Color(231, 224, 56));
        labelSubtotal.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        labelSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSubtotal.setText("$ 0");

        jLabel12.setText("Iva");

        labelIva.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        labelIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelIva.setText("$ 0");

        jLabel14.setText("Total");

        labelTotal.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelTotal.setForeground(new java.awt.Color(234, 12, 12));
        labelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTotal.setText("$ 0");

        jLabel16.setText("Pago");

        jLabel17.setText("$");

        campoPago.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        campoPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        campoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPagoActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(108, 232, 174));

        jLabel18.setText("Cambio");

        labelCambio.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelCambio.setText("$ 0.0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(49, 49, 49)
                .addComponent(labelCambio)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(labelCambio))
                .addContainerGap())
        );

        botonNuevoCliente.setText("Nuevo");
        botonNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoClienteActionPerformed(evt);
            }
        });

        botonVenta.setText("Efectuar Venta");
        botonVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVentaActionPerformed(evt);
            }
        });

        botonBuscarCliente.setText("Buscar");
        botonBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(2, 2, 2)
                                .addComponent(campoPago))
                            .addComponent(labelTotal)
                            .addComponent(labelIva)
                            .addComponent(labelSubtotal)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombreCliente)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(campoUsuarioCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(botonVenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(botonCancelarVenta)
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(botonBuscarCliente)
                .addGap(40, 40, 40)
                .addComponent(botonNuevoCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscarCliente)
                    .addComponent(botonNuevoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(campoUsuarioCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNombreCliente)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(labelSubtotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(labelIva))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(labelTotal))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(campoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCancelarVenta)
                    .addComponent(botonVenta))
                .addGap(0, 43, Short.MAX_VALUE))
        );

        jLabel9.setText("Vendedor");

        labelNombreCajero.setText("No asignado");

        botonBuscarMed.setText("Buscar");
        botonBuscarMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarMedActionPerformed(evt);
            }
        });

        tablaVarioSalud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Descripcion", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaVarioSalud);

        botonAgregarOtrosMed.setText("Otros Med");
        botonAgregarOtrosMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarOtrosMedActionPerformed(evt);
            }
        });

        botonAgregarServicioSalud.setText("Servicio Salud");
        botonAgregarServicioSalud.setToolTipText("Eliminar");
        botonAgregarServicioSalud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarServicioSaludActionPerformed(evt);
            }
        });

        botonEliminarVarios.setText("Eliminar");
        botonEliminarVarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarVariosActionPerformed(evt);
            }
        });

        campoDescripcionStock.setEditable(false);
        campoDescripcionStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescripcionStockActionPerformed(evt);
            }
        });

        campoDescripcionLab.setEditable(false);
        campoDescripcionLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescripcionLabActionPerformed(evt);
            }
        });

        campoDescripcionPrecio.setEditable(false);
        campoDescripcionPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescripcionPrecioActionPerformed(evt);
            }
        });

        campoDescripcionNombreComercial.setEditable(false);
        campoDescripcionNombreComercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescripcionNombreComercialActionPerformed(evt);
            }
        });

        campoDescripcionCantidad.setEditable(false);
        campoDescripcionCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescripcionCantidadActionPerformed(evt);
            }
        });

        botonAgregarItem.setText("Agregar ");
        botonAgregarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarItemActionPerformed(evt);
            }
        });

        botonEliminarItemVenta.setText("Eliminar");
        botonEliminarItemVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarItemVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAgregarOtrosMed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonAgregarServicioSalud)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonEliminarVarios))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelNombreComercial)
                                .addGap(3, 3, 3)
                                .addComponent(campoDescripcionNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDescripcionLab)
                                    .addComponent(labelStock))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(campoDescripcionLab, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(labelDescripcionPrecio)
                                        .addGap(3, 3, 3)
                                        .addComponent(campoDescripcionPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(labelPrecioDesc)
                                        .addGap(25, 25, 25)
                                        .addComponent(labelDescripcionDesc))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(campoDescripcionStock, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(labelCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(campoDescripcionCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAgregarItem)
                                .addGap(40, 40, 40)
                                .addComponent(botonEliminarItemVenta)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonBuscarMed)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel9)
                        .addGap(34, 34, 34)
                        .addComponent(labelNombreCajero)
                        .addContainerGap(212, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(botonBuscarMed)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(labelNombreCajero))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(90, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNombreComercial)
                            .addComponent(campoDescripcionNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelDescripcionLab)
                                .addComponent(campoDescripcionLab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelDescripcionPrecio)
                                .addComponent(campoDescripcionPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelPrecioDesc)
                                .addComponent(labelDescripcionDesc)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelStock))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campoDescripcionStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelCantidad)
                                    .addComponent(campoDescripcionCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonAgregarItem)
                            .addComponent(botonEliminarItemVenta))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonAgregarOtrosMed)
                            .addComponent(botonAgregarServicioSalud)
                            .addComponent(botonEliminarVarios))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoBusquedaActionPerformed

    private void campoBusquedaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_campoBusquedaInputMethodTextChanged


    }//GEN-LAST:event_campoBusquedaInputMethodTextChanged

    private void campoBusquedaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_campoBusquedaCaretUpdate

    }//GEN-LAST:event_campoBusquedaCaretUpdate

    private void botonCancelarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarVentaActionPerformed
     limpiarVenta();
    }//GEN-LAST:event_botonCancelarVentaActionPerformed

    private void campoUsuarioCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoUsuarioCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoUsuarioCedulaActionPerformed

    private void botonNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoClienteActionPerformed

        String nombre = JOptionPane.showInputDialog("Ingrese nombre");
        String cedula = campoUsuarioCedula.getText();

             Cliente cliente=null;
            
            if (cedula != null && nombre != null) {
                int numeroCedula = Integer.parseInt(cedula);
                cliente = new Cliente();
                cliente.setCedula(numeroCedula);

                cliente.setNombreCliente(nombre.toUpperCase());
                ClienteDAO dao = new ClienteDAO();
                
               try { 
                 Cliente clienteAux = dao.buscarClientePorCedula(cliente);
                 JOptionPane.showMessageDialog(null, "Cliente ya existe");
               }
               catch(Exception error){
                   //JOptionPane.showMessageDialog(null, error.getMessage());
                 try{
                 dao.registrarCliente(cliente);
                 dao.buscarClientePorCedula(cliente);
                 servidor.agregarCliente(cliente);
                 JOptionPane.showMessageDialog(null, "Cliente Ingresado");
                 }
                 catch(Exception error1){
                   JOptionPane.showMessageDialog(null, "Cliente no se puede ingresar");
                 }
               }
               
            cliente = servidor.getCliente();

            labelNombreCliente.setText(cliente.getNombreCliente());
            campoUsuarioCedula.setText(String.valueOf(cliente.getCedula()));
    }
    }//GEN-LAST:event_botonNuevoClienteActionPerformed

    private void campoDescripcionStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescripcionStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescripcionStockActionPerformed

    private void campoDescripcionLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescripcionLabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescripcionLabActionPerformed

    private void campoDescripcionPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescripcionPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescripcionPrecioActionPerformed

    private void campoDescripcionNombreComercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescripcionNombreComercialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescripcionNombreComercialActionPerformed

    private void campoDescripcionCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescripcionCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescripcionCantidadActionPerformed

    private void botonAgregarOtrosMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarOtrosMedActionPerformed
        String descripcion = "Otros medicamentos";
        agregarGeneralServiciciosOtrosMed(descripcion);

    }//GEN-LAST:event_botonAgregarOtrosMedActionPerformed

    private void botonAgregarServicioSaludActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarServicioSaludActionPerformed
        String descripcion = "Servicio de Salud";
        agregarGeneralServiciciosOtrosMed(descripcion);
    }//GEN-LAST:event_botonAgregarServicioSaludActionPerformed

    private void botonAgregarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarItemActionPerformed
        if (itemVentaActivo != null) {
            try {
                int valor = Integer.parseInt(campoDescripcionCantidad.getText());
                itemVentaActivo.setCantidad(valor);
                servidor.agregarMedicamentos(itemVentaActivo);
                actualizarValoresVenta();

                JOptionPane.showMessageDialog(null, "Agregados Medicamentos");
                cargarDatosTabla();
            } catch (NumberFormatException error1) {
                JOptionPane.showMessageDialog(null, "Cantidad invalido");
            } catch (Exception error) {
                //JOptionPane.showMessageDialog(null, error.getMessage());
                error.printStackTrace();
            }
        }

    }//GEN-LAST:event_botonAgregarItemActionPerformed

    private void botonEliminarItemVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarItemVentaActionPerformed
        int indiceFila = tablaItemsVenta.getSelectedRow();
        if (indiceFila != -1) {
            ItemVenta itemAEliminar = servidor.getFact().getListaItemVentas().get(clavesElementos[indiceFila]);
            try {
                servidor.eliminarMedicamentos(itemAEliminar);
                cargarDatosTabla();
                actualizarValoresVenta();
            } catch (Exception error) {
                JOptionPane.showMessageDialog(null, error.getMessage());
            }
        }
    }//GEN-LAST:event_botonEliminarItemVentaActionPerformed

    private void botonBuscarMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarMedActionPerformed
        String codigoBarras = campoBusqueda.getText();
        itemVentaActivo = null;
        if (codigoBarras != null && codigoBarras.length() > 0) {
            LaboratorioDescMedVentaDAO dao = new LaboratorioDescMedVentaDAO();
            LaboratorioDescMedVenta labDescVenta = new LaboratorioDescMedVenta();
            labDescVenta.setLaboratorioDescMed(new LaboratorioDescMed());
            labDescVenta.getLaboratorioDescMed().setCodigoBarras(codigoBarras);
            try {
                labDescVenta = dao.conseguirLabDescVentaPorCodigoBarras(labDescVenta);
                ConsultaMedDAO daoConsultaMed = new ConsultaMedDAO();
                DescripcionLaboratorio descLab = daoConsultaMed.consultaCantidadesPorDescLab(labDescVenta);

                itemVentaActivo = new ItemVenta();
                itemVentaActivo.setStock((int) descLab.getCantidad());
                itemVentaActivo.setLabDescVenta(labDescVenta);
                cargarDescripcionActiva(labDescVenta);
                campoDescripcionCantidad.setEditable(true);
            } catch (Exception error) {
                // JOptionPane.showMessageDialog(null,"no se puede realizar consulta");
                limpiarDescripcion();
                JOptionPane.showMessageDialog(null,"Medicamento no encontrado");
            }
        }
    }//GEN-LAST:event_botonBuscarMedActionPerformed

    private void botonEliminarVariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarVariosActionPerformed
        int indiceFila = tablaVarioSalud.getSelectedRow();
        System.out.println("indice fila:" + indiceFila);
        if (indiceFila != -1) {
            GeneralesServiciosMedicamentos generalAEliminar = servidor.getFact().getListaGeneralServiciosMedicamentos().get(indiceFila);
            try {
                servidor.eliminarServiciosGeneralesMedicamentos(generalAEliminar);
                cargarDatosGeneralesServiciosMedicamentos();
                actualizarValoresVenta();
            } catch (Exception error) {
                JOptionPane.showMessageDialog(null, error.getMessage());
            }
        }
    }//GEN-LAST:event_botonEliminarVariosActionPerformed

    private void campoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPagoActionPerformed
        esValidaVenta=false;
        String pago = campoPago.getText();
               if (pago != null && pago.length() > 0) {
            
            int valor = Integer.parseInt(pago);
            if (servidor.totalVenta() > 0 && (valor >= servidor.totalVenta())) {
                servidor.setPago(valor);
                labelCambio.setText(Formateador.formatoDecimal(servidor.devolusion()));
                esValidaVenta=true;
            } else {
            
               JOptionPane.showMessageDialog(null, "Pago insuficiente o no existen elementos en compra");
             }

        } else {
            JOptionPane.showMessageDialog(null, "Pago no permitido");
        }
    }//GEN-LAST:event_campoPagoActionPerformed

    private void botonVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVentaActionPerformed
     if(esValidaVenta){
         try{
     servidor.procesarVenta();
     JOptionPane.showMessageDialog(null, "Venta Realizada");
     limpiarVenta();
     esValidaVenta=false;
     }
     catch(Exception error){
         error.printStackTrace();
     
     }
     }
     else{JOptionPane.showMessageDialog(null, "No se puede realizar venta");}
    }//GEN-LAST:event_botonVentaActionPerformed

    private void botonBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarClienteActionPerformed
        
      String cedula = campoUsuarioCedula.getText();

             Cliente cliente=null;
            
            if (cedula != null && cedula.length()>0 ) {
                int numeroCedula = Integer.parseInt(cedula);
                cliente = new Cliente();
                cliente.setCedula(numeroCedula);

                
                ClienteDAO dao = new ClienteDAO();
                
               try { 
                 cliente = dao.buscarClientePorCedula(cliente);
                 JOptionPane.showMessageDialog(null, "Cliente encontrado");
                 labelNombreCliente.setText(cliente.getNombreCliente());
                 campoUsuarioCedula.setText(String.valueOf(cliente.getCedula()));
               }
               catch(Exception error){   
                 JOptionPane.showMessageDialog(null, "Cliente no existe");   
               }
            }
               
    }//GEN-LAST:event_botonBuscarClienteActionPerformed

    private void campoUsuarioCedulaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_campoUsuarioCedulaCaretUpdate
      
    }//GEN-LAST:event_campoUsuarioCedulaCaretUpdate
    
    
    
    public void limpiarDescripcion() {
        campoDescripcionCantidad.setText("1");
        campoDescripcionLab.setText("");
        campoDescripcionNombreComercial.setText("");
        campoDescripcionPrecio.setText("");
        campoDescripcionStock.setText("");
        campoDescripcionCantidad.setText("");
        campoDescripcionCantidad.setEditable(false);
        labelPrecioDesc.setText("");
        labelDescripcionDesc.setText("");

    }

    public void cargarDescripcionActiva(LaboratorioDescMedVenta labDescVenta) {
        campoDescripcionCantidad.setText("1");
        campoDescripcionLab.setText(labDescVenta.getLaboratorioDescMed().getLaboratorio().getNombre());
        campoDescripcionNombreComercial.setText(labDescVenta.getLaboratorioDescMed().getDescripcion().getNombreComercial());
        campoDescripcionPrecio.setText(String.valueOf(labDescVenta.getPrecio()));
        campoDescripcionStock.setText(String.valueOf(itemVentaActivo.getStock()));
        if (labDescVenta.getNeto() == 0) {
            System.out.println("verificando descuento");
            labelPrecioDesc.setText("Valor Con Descuento");
            labelDescripcionDesc.setText(Formateador.formatoDecimal(Math.round(labDescVenta.getPrecio() * 0.75)));

        } else {
            labelPrecioDesc.setText("");
            labelDescripcionDesc.setText("");

        }

    }

    public void limpiarVenta(){
    
    try {
           servidor=new FacturaServiceImp();
        } catch (Exception error) {
            error.printStackTrace();
        }
    campoDescripcionCantidad.setEditable(false);
        labelPrecioDesc.setText("");
        labelDescripcionDesc.setText("");
        Usuario usuario = servidor.getUsuario();
        Cliente cliente = servidor.getCliente();

        labelNombreCajero.setText(usuario.getLogin());

        labelNombreCliente.setText(cliente.getNombreCliente());
        campoUsuarioCedula.setText(String.valueOf(cliente.getCedula()));
        limpiarDescripcion();
        String[] titulos = new String[]{"Descripcion", "Valor"};
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        tablaVarioSalud.setModel(modelo);
        String[] titulosA = new String[]{
            "codigo", "Descripcion", "Cantidad", "Subtotal"
        };
        DefaultTableModel modelo1 = new DefaultTableModel(null, titulos);
        
        tablaItemsVenta.setModel(modelo1);
        actualizarValoresVenta();
        labelCambio.setText("");
        campoPago.setText("");
    }
    public void cargarDatosTabla() {

        Map<String, ItemVenta> listaMedicamentos = servidor.getFact().getListaItemVentas();
        String[] titulos = new String[]{
            "codigo", "Descripcion", "Cantidad", "Subtotal"
        };
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);

        // falta condicion
        clavesElementos = new String[listaMedicamentos.size()];
        int i = 0;
        for (String clave : listaMedicamentos.keySet()) {
            clavesElementos[i] = clave;
            ItemVenta item = listaMedicamentos.get(clave);
            modelo.addRow(cargarFilaTablaMed(item));
            i++;
        }

        tablaItemsVenta.setModel(modelo);
    }

    public String[] cargarFilaTablaMed(ItemVenta item) {

        String[] fila = new String[4];
        fila[0] = item.getLabDescVenta().getLaboratorioDescMed().getCodigoBarras();
        fila[1] = item.getLabDescVenta().getLaboratorioDescMed().getDescripcion().getNombreComercial();
        fila[2] = String.valueOf(item.getCantidad());
        fila[3] = Formateador.formatoDecimal(item.calcularValorDescuento());

        return fila;
    }

    public void actualizarValoresVenta() {
        labelTotal.setText(Formateador.formatoDecimal(servidor.totalVenta()));
        labelSubtotal.setText(Formateador.formatoDecimal(servidor.subTotal()));
        labelIva.setText(Formateador.formatoDecimal(servidor.totalIva()));
    }

    //cargar datos generales
    public void cargarDatosGeneralesServiciosMedicamentos() {

        List<GeneralesServiciosMedicamentos> listaGenerales = servidor.getFact().getListaGeneralServiciosMedicamentos();
        String[] titulos = new String[]{"Descripcion", "Valor"};
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);

        // falta condicion
        for (GeneralesServiciosMedicamentos generalServicioMedicamento : listaGenerales) {
            String[] info = new String[]{
                generalServicioMedicamento.getDescripcionServicio(),
                Formateador.formatoDecimal(generalServicioMedicamento.getValor())
            };
            modelo.addRow(info);
        }

        tablaVarioSalud.setModel(modelo);
    }

    public void agregarGeneralServiciciosOtrosMed(String descripcioGeneralServicioMed) {
        String valor = JOptionPane.showInputDialog("Valor Medicamento");
        if (valor != null && valor.length() > 0) {
            try {
                int precio = Integer.parseInt(valor);
                GeneralesServiciosMedicamentos generalServiciosMedicamentos = new GeneralesServiciosMedicamentos(descripcioGeneralServicioMed, precio);
                servidor.agregarServiciosGeneralesMedicamentos(generalServiciosMedicamentos);
                JOptionPane.showMessageDialog(null, "Valor agregado");
                cargarDatosGeneralesServiciosMedicamentos();
                actualizarValoresVenta();
            } catch (NumberFormatException error) {
                JOptionPane.showMessageDialog(null, "dato no aceptado. Solo numeros");
            } catch (Exception error) {
                JOptionPane.showMessageDialog(null, error.getMessage());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazFactura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarItem;
    private javax.swing.JButton botonAgregarOtrosMed;
    private javax.swing.JButton botonAgregarServicioSalud;
    private javax.swing.JButton botonBuscarCliente;
    private javax.swing.JButton botonBuscarMed;
    private javax.swing.JButton botonCancelarVenta;
    private javax.swing.JButton botonEliminarItemVenta;
    private javax.swing.JButton botonEliminarVarios;
    private javax.swing.JButton botonNuevoCliente;
    private javax.swing.JButton botonVenta;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField campoBusqueda;
    private javax.swing.JTextField campoDescripcionCantidad;
    private javax.swing.JTextField campoDescripcionLab;
    private javax.swing.JTextField campoDescripcionNombreComercial;
    private javax.swing.JTextField campoDescripcionPrecio;
    private javax.swing.JTextField campoDescripcionStock;
    private javax.swing.JTextField campoPago;
    private javax.swing.JTextField campoUsuarioCedula;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelCambio;
    private javax.swing.JLabel labelCantidad;
    private javax.swing.JLabel labelDescripcionDesc;
    private javax.swing.JLabel labelDescripcionLab;
    private javax.swing.JLabel labelDescripcionPrecio;
    private javax.swing.JLabel labelIva;
    private javax.swing.JLabel labelNombreCajero;
    private javax.swing.JLabel labelNombreCliente;
    private javax.swing.JLabel labelNombreComercial;
    private javax.swing.JLabel labelPrecioDesc;
    private javax.swing.JLabel labelStock;
    private javax.swing.JLabel labelSubtotal;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JTable tablaItemsVenta;
    private javax.swing.JTable tablaVarioSalud;
    // End of variables declaration//GEN-END:variables
}
